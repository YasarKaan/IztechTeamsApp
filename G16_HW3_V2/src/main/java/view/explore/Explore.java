/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.explore;

import controller.helper.Helper;
import controller.helper.Update;
import model.clothes.Outfit;
import model.user.User;

import javax.swing.*;
import java.awt.*;
import java.util.Objects;

/**
 *
 * @author tamer
 */
public class Explore extends javax.swing.JPanel {
    private User user;
    /**
     * Creates new form Explore
     */
    public Explore(User user) {
        this.user = user;
        initComponents(user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(User user) {

        likeButton = new javax.swing.JButton();
        dislikeButton = new javax.swing.JButton();
        name1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        outfitInfo = new javax.swing.JTextArea();
        followButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        outfits = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentInput = new javax.swing.JTextArea();
        commentButton = new javax.swing.JButton();

        likeButton.setText("Like");
        likeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                likeButtonMouseClicked(evt);
            }
        });

        dislikeButton.setText("Dislike");
        dislikeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dislikeButtuon1MouseClicked(evt);
            }
        });

        name1.setText("Name");

        outfitInfo.setEditable(false);
        outfitInfo.setColumns(20);
        outfitInfo.setRows(5);
        jScrollPane3.setViewportView(outfitInfo);

        followButton1.setText("Follow");
        followButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                followButton1MouseClicked(evt);
            }
        });

        outfits.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = Helper.outfitNameArray();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        outfits.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        outfits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outfitsMouseClicked(evt);
            }
        });

        jScrollPane4.setViewportView(outfits);

        commentInput.setColumns(20);
        commentInput.setRows(5);
        jScrollPane1.setViewportView(commentInput);

        commentButton.setText("Comment");
        commentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commentButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(likeButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dislikeButton))
                        .addComponent(jScrollPane3)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(name1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(followButton1))
                        .addComponent(jScrollPane1))
                    .addComponent(commentButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name1)
                            .addComponent(followButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dislikeButton)
                            .addComponent(likeButton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(commentButton)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void outfitsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outfitsMouseClicked
        followButton1.setText("Follow");
        likeButton.setBackground(Color.WHITE);
        dislikeButton.setBackground(Color.WHITE);
        String name = outfits.getSelectedValue();
        Outfit outfit = Helper.findOutfit(name);
        User newUser = Helper.findUserFromOutfitName(name);
        followButton1.setVisible(true);
        name1.setText(newUser.getUserName());
        if(user.getFollowingUsersId().contains(newUser.getUserId())){
            followButton1.setText("Unfollow");

        }

        else if(user.getUserId()==newUser.getUserId()){
            followButton1.setVisible(false);
        }
        if(outfit.getLike().contains(user.getUserId())){
            likeButton.setBackground(Color.GREEN);
        }

        if(outfit.getDislike().contains(user.getUserId())){
            dislikeButton.setBackground(Color.RED);
        }
        outfitInfo.setText(outfit.toString());
        this.revalidate();
        this.repaint();

    }//GEN-LAST:event_outfitsMouseClicked

    private void followButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_followButton1MouseClicked
        String name = name1.getText();
        User newUser = Helper.findUser(name);
        String button = followButton1.getText();
        if(button.equals("Unfollow")|| user.getFollowingUsersId().contains(Objects.requireNonNull(newUser).getUserId()) ){
            assert newUser != null;
            user.getFollowingUsersId().remove(Helper.findIndex(user.getFollowingUsersId(),newUser.getUserId()));
            newUser.getFollowerUsersId().remove(Helper.findIndex(newUser.getFollowerUsersId(),user.getUserId()));
            JOptionPane.showMessageDialog(this,"Successfully Unfollowed");
        }
        else if(button.equals("Follow")|| !(user.getFollowingUsersId().contains(newUser.getUserId()))){
            user.getFollowingUsersId().add(newUser.getUserId());
            newUser.getFollowerUsersId().add(user.getUserId());
            JOptionPane.showMessageDialog(this,"Successfully Followed");
        }
        Update.updateXml();
    }//GEN-LAST:event_followButton1MouseClicked

    private void likeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_likeButtonMouseClicked
        String name = outfits.getSelectedValue();
        Outfit outfit= Helper.findOutfit(name);
        assert outfit != null;
        if(likeButton.getBackground().equals(Color.GREEN))
        {
            JOptionPane.showMessageDialog(this,"You already Liked");
        }
        if(likeButton.getBackground().equals(Color.WHITE)){
            if(outfit.getDislike().contains(user.getUserId())){
                outfit.getDislike().remove(Helper.findIndex(outfit.getDislike(),user.getUserId()));
            }
            outfit.getLike().add(user.getUserId());
            likeButton.setBackground(Color.GREEN);
        }
        if(dislikeButton.getBackground().equals(Color.red)){
            if(outfit.getLike().contains(user.getUserId())){
                outfit.getLike().remove(Helper.findIndex(outfit.getLike(),user.getUserId()));
                likeButton.setBackground(Color.WHITE);
            }
            int i = outfit.getDislike().remove(Helper.findIndex(outfit.getDislike(),user.getUserId()));
            outfit.getDislike().remove(i);
            dislikeButton.setBackground(Color.WHITE);
        }
        Update.updateJson();
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_likeButtonMouseClicked

    private void dislikeButtuon1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dislikeButtuon1MouseClicked
        String name = outfits.getSelectedValue();
        Outfit outfit= Helper.findOutfit(name);
        assert outfit != null;

        if(dislikeButton.getBackground().equals(Color.RED))
        {
            JOptionPane.showMessageDialog(this,"You already Disliked");
        }
        if(dislikeButton.getBackground().equals(Color.WHITE)){
            if(outfit.getLike().contains(user.getUserId())){
                outfit.getLike().remove(Helper.findIndex(outfit.getLike(),user.getUserId()));
                likeButton.setBackground(Color.WHITE);
            }
            outfit.getDislike().add(user.getUserId());
            dislikeButton.setBackground(Color.RED);
        }
        if(likeButton.getBackground().equals(Color.GREEN)){
            outfit.getLike().remove(Helper.findIndex(outfit.getLike(),user.getUserId()));
            outfit.getDislike().add(user.getUserId());
            dislikeButton.setBackground(Color.RED);
            likeButton.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_dislikeButtuon1MouseClicked

    private void commentButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commentButtonMouseClicked
        String name = outfits.getSelectedValue();
        Outfit outfit= Helper.findOutfit(name);
        String comment =commentInput.getText();
        if(comment.equals("")){
            JOptionPane.showMessageDialog(this,"Unnacceptable comment");
        }
        else{
            assert outfit != null;
            outfit.getComment().add(comment);
            JOptionPane.showMessageDialog(this,"Successfully added comment ");
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_commentButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton commentButton;
    public javax.swing.JTextArea commentInput;
    private javax.swing.JButton dislikeButton;
    private javax.swing.JButton followButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton likeButton;
    private javax.swing.JLabel name1;
    private javax.swing.JTextArea outfitInfo;
    public  javax.swing.JList<String> outfits;
    // End of variables declaration//GEN-END:variables
}
